#
# stack for aadhiral user actions
#
service:
  name: stack-${self:custom.conf.api_name}-client
#
# custom variables used in the sls configuration
#
custom:
   conf:
    stage: ${opt:stage,env:STAGE,'dev'}
    account_id: ${opt:account_id,env:ACCOUNT_ID, '096084244067'}
    api_name: ${opt:api_name,env:API_NAME, 'piketto-services'}
    endUserTableName: table-end-user-${self:custom.conf.stage}
    cognitoAuth: cgauth-piketto-end-user-services-${self:custom.conf.account_id}-${self:provider.stage}
   bundle:
    sourcemaps: true  # Enable source maps
    caching: true     # Enable Webpack caching
    stats: true       # Print out any Webpack output
    linting: true     # Enable linting as a part of the build process
#
# provider configurations
#
provider:
  name: aws
  region: ap-southeast-1
  runtime: nodejs12.x
  deploymentBucket: s3-admin-serverless-${self:custom.conf.account_id}-${self:provider.region}
  stage: ${self:custom.conf.stage}
  variableSyntax: "\\${((?=self:|env:|opt:|ssm:|s3:|cf:|deep:|file\\()[ ~:a-zA-Z0-9._\\'\",\\-\\/\\(\\)]+?)}"
  apiGateway:
    restApiId:
      Fn::ImportValue: api-${self:custom.conf.api_name}-id-${self:custom.conf.stage}
    restApiRootResourceId:
      Fn::ImportValue: api-${self:custom.conf.api_name}-rid-${self:custom.conf.stage}
  # These environment variables are made available to our functions
  # under process.env.
  environment:
    endUserTableName: ${self:custom.conf.endUserTableName}


# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-bundle
# Create an optimized package for our functions
package:
  individually: true
#
# functions for sls stack
#
functions:
  # users table functions
  - ${file(./templates/user/create.users.yml)}
  - ${file(./templates/user/delete.users.yml)}
  - ${file(./templates/user/get.users.yml)}
  - ${file(./templates/user/list.users.yml)}
  - ${file(./templates/user/update.users.yml)}
#
# resources for sls stack
#
resources :
  - ${file(./templates/lambdaroles.yml)}